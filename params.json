{"name":"GistDB","tagline":"use gist's as databases with nodejs.","body":"GistDB\r\n======\r\n\r\nInstall:\r\n    npm install gistdb\r\n\r\nThis project was started just to learn the gist api.\r\n\r\nThis project is [Unlicensed](http://unlicense.org/ \"Title\")\r\n\r\nFunctions\r\n------\r\n    create(content[,database name]); -- Create a new databse. (Requires auth) - Caller ID: 3\r\n    get(key) -- Get the value for key.\r\n    load([gist id]); -- Load a database. (No auth required) - Caller ID: 1\r\n    remove(key) -- Deletes a key and its value. Returns true or false.\r\n    save(); -- Saves a database to gist. (Requires auth) - Caller ID: 2\r\n    set(key,value); -- Sets a key with said value.\r\n \r\n    NOTE: Caller ID is used for the error listener.\r\n\r\nListeners\r\n------\r\n    created -- Triggered by create()\r\n        Returned in object: db (database name), id (gist id)\r\n        Example: GistDB.on('created',function(obj) { console.log(\"Database: \"+obj.db+\" - ID: \"+obj.id); });\r\n    loaded -- Triggered by load();\r\n        Returned in object: content (database), id (gist id)\r\n        Example: GistDB.on('loaded',function(obj) { console.log(\"Content: \"+JSON.stringify(obj.content)); });\r\n    saved -- Triggered by save();\r\n        Returned in object: content (database), id (gist id)\r\n        Example: GistDB.on('saved',function(obj) { console.log(\"Content: \"+JSON.stringify(obj.content)); });\r\n    error -- Triggered by create(), load(), save()\r\n        Returned in object: msg (error message), id (function caller id)\r\n        Example: GistDB.on('error',function(obj) { console.log(\"Error Message: \"+obj.msg+\" - Caller ID: \"+obj.id); });\r\n\r\n    NOTE: If a listener is called without being defined, a message is sent to console.\r\n\r\nOptions\r\n------\r\n    NOTE: Username and password are not needed if you're only going to load the gist.\r\n          Changed from \"user,pass,[opts]\" for easy option choosing.\r\n\r\n    User - Your github user name. (optional only if loading a gist.)\r\n    Pass - Your github password. (optional only if loading a gist, required with username.)\r\n    ID - Your gist id. (optional)\r\n    Timeout - Request timeout. (optional, defaults to 10 seconds)\r\n        Example: gdb = new GistDB({user:'USERNAME',pass:'PASSWORD',id:\"9cb6f8b7baa8300af0d7\",timeout:1000});\r\n\r\nUsage\r\n-------\r\n    var GistDB = require('gistdb');\r\n    var gdb = new GistDB({user:'USERNAME',pass:'PASSWORD',id:\"9cb6f8b7baa8300af0d7\",timeout:1000});\r\n\r\nExample\r\n-------\r\n    var GistDB = require('gistdb');\r\n    var gdb = new GistDB({user:'USERNAME',pass:'PASSWORD',id:\"9cb6f8b7baa8300af0d7\",timeout:1000});\r\n    var content = {example:'This is an example database!'};\r\n    gdb.create(content,'example.db');\r\n    gdb.on('created',function (data) {\r\n        console.log('New database created! ('+data.id+')');\r\n        init(gdb);\r\n    });\r\n    gdb.on('error',function (data) {\r\n        console.log('There was an error! (Error: '+data.msg+')');\r\n    });\r\n    \r\n    gdb.on('saved',function (data) {\r\n        console.log('Content saved to database!');\r\n    });\r\n    \r\n    console.log('Init called: '+gdb.get('Initcalled')); // will return false, as the DB isn't loaded.\r\n    \r\n    function init (gdb) {\r\n             gdb.set('Initcalled',true);\r\n             console.log('Init called: '+gdb.get('Initcalled')); // SHOULD return true if you loaded the DB correctly.\r\n             this.save(); // Save when ever you feel like it. (probably best after adding content to the object.)\r\n             // Run your project...\r\n    };\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}